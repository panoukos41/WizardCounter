@inherits CoreRxComponent<WizardGameViewModel>
@inject TranslateService translate

<div class="flex gap-2 items-center">
    <FaSolidScroll class="icon-sm" />
    <h1 class="text-lg m-0">
        <span>@("round" | translate)</span>
        <span>@ViewModel.CurrentRound</span>
        <span> / </span>
        <span>@ViewModel.MaxRounds</span>
    </h1>
    <p class="ms-auto font-medium">
        <span>@("total-wins" | translate) @(ViewModel.ActiveRound.Sum(x => x.Value.Wins))</span>
        <span> / </span>
        <span>@(ViewModel.CurrentRound)</span>
        <span></span>
    </p>
</div>

<div class="overflow-y-auto">
    <div class="grid grid-cols-[auto_1fr_auto_auto] gap-2 items-center">
        <h2 class="m-0">@("player" | translate)</h2>
        <h2 class="m-0">@("wins" | translate)</h2>
        <div></div>
        <div></div>
        <div class="col-span-full border-t border-on-surface"></div>

        @foreach (var (playerId, data) in ViewModel.ActiveRound)
        {
            <div @key="playerId" class="contents">
                <div class="flex items-center justify-center bg-primary-container rounded h-9">
                    <p class="font-bold">@(ViewModel.GetPlayerName(playerId))</p>
                </div>
                <input class="rounded bg-surface-bright" type="number" @bind-value="data.Wins" disabled />
                <Button class="btn btn-primary w-9 h-9" OnClick="() => Increase(data)">
                    <FaSolidPlus class="icon-sm" />
                </Button>
                <Button class="btn btn-secondary w-9 h-9" OnClick="() => Decrease(data)">
                    <FaSolidMinus class="icon-sm" />
                </Button>
            </div>
        }
    </div>
</div>

<Button class="btn btn-secondary mx-auto min-w-60 my-2 gap-2 h-12" OnClick="() => ViewModel.Prepare()" disabled="@(!IsValid)">
    @if (ViewModel.IsFinished)
    {
        <FaSolidFlagCheckered class="icon-sm" />
        <span>@("finish" | translate)</span>
    }
    else
    {
        <FaSolidWandMagicSparkles class="icon-sm" />
        <span>@("prepare" | translate)</span>
    }
</Button>

@code {
    private bool IsValid { get; set; }

    private void Increase(WizardRoundData data)
    {
        if (data.Wins >= ViewModel.CurrentRound || ViewModel.ActiveRound.Sum(x => x.Value.Wins) == ViewModel.CurrentRound) return;

        data.Wins += 1;
        Validate();
    }

    private void Decrease(WizardRoundData data)
    {
        if (data.Wins <= 0) return;

        data.Wins -= 1;
        Validate();
    }

    private void Validate()
    {
        IsValid = ViewModel.ActiveRound.Sum(x => x.Value.Wins) == ViewModel.CurrentRound;
        Update();
    }

    protected override void OnInitialized()
    {
        ViewModel.WhenPropertyChanged.Subscribe(_ => Update()).DisposeWith(Disposables);
    }
}
